<nav class="navbar navbar-default">
  <div class="container-fluid">
    <div class="navbar-header">
      <a class="navbar-brand" href="/">
        <div>Heart Beats</div> 
      </a>
    </div>
  </div>
</nav>
<p id="notice"><%= notice %></p>

<style>

#heart {
    position: relative;
    width: 100px;
    height: 90px;
    -webkit-animation:spin <%=  60 / @heart.beats.to_f %>s infinite alternate;
    -webkit-animation-duration: <%=  60 / @heart.beats.to_f / 2 %>s;
    animation-duration: <%=  60 / @heart.beats.to_f / 2 %>s;
}
#heart:before,
#heart:after {
    position: absolute;
    content: "";
    left: 50px;
    top: 0;
    width: 50px;
    height: 80px;
    background: red;
    -moz-border-radius: 50px 50px 0 0;
    border-radius: 50px 50px 0 0;
    -webkit-transform: rotate(-45deg);
       -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
         -o-transform: rotate(-45deg);
            transform: rotate(-45deg);
    -webkit-transform-origin: 0 100%;
       -moz-transform-origin: 0 100%;
        -ms-transform-origin: 0 100%;
         -o-transform-origin: 0 100%;
            transform-origin: 0 100%;
}
#heart:after {
    left: 0;
    -webkit-transform: rotate(45deg);
       -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
         -o-transform: rotate(45deg);
            transform: rotate(45deg);
    -webkit-transform-origin: 100% 100%;
       -moz-transform-origin: 100% 100%;
        -ms-transform-origin: 100% 100%;
         -o-transform-origin: 100% 100%;
            transform-origin :100% 100%;
}

@-webkit-keyframes spin {
	from { -webkit-transform:scale(.5); }
	to { -webkit-transform:scale(.7); }}
</style>
<!-- <div class="dil"></div> -->
<center><div id='heart'></div></center>		
<p>
  <center style="font-size: 30px;">
  	<strong>Beat:</strong>
  	<%= @heart.beats %>
	</center>
</p>
<style>
  path {
  stroke: DodgerBlue;
  stroke-width: 5;
  fill: none;
}
.axis {
  font-size: 11px;
  fill: gray;
}

.x.axis line {
  stroke: lightgrey;
}

.x.axis .minor {
  stroke-opacity: .5;
}

.x.axis path {
  stroke: #fafafa;
}

.y.axis line, .y.axis path {
  fill: none;
  stroke: lightgrey;
}
</style>
<div class="demo"></div>
<script>
  var margin = {top: 60, right: 40, bottom: 50, left: 60};
var w = 1000 ;
var h = 360 ;
    

var data = [<%= @heart.signals %>];
var Num = 200;
var dataset = data.slice(0, Num);



console.log(dataset)

var Ymax = d3.max(dataset),
  Ymin = d3.min(dataset);

var xScale = d3.scale.linear().domain([0, dataset.length]).range([0, w]);

var yScale = d3.scale.linear().domain([Ymin, Ymax]).range([h, 0]);

var line = d3.svg.line()
  .x(function(d,i) { 
    return xScale(i + 1);
  })
  .y(function(d) { 
    return yScale(d);
  });

var svg = d3.select('.demo').append('svg')
  .attr('width', w + margin.left + margin.right)
  .attr('height', h + margin.top + margin.bottom)
  .append('g')
  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');

var xAxis = d3.svg.axis().scale(xScale).orient('bottom').tickSize(-h).tickSubdivide(true);

svg.append('g')
  .attr('class', 'x axis')
  .attr('transform', 'translate(0,' + h + ')')
  .call(xAxis);

var yAxisLeft = d3.svg.axis().scale(yScale).ticks(4).orient('left');

svg.append('g')
  .attr('class', 'y axis')
  .attr('transform', 'translate(0,0)')
  .call(yAxisLeft);
      
//svg.append('path').attr('d', line(dataset));

// svg.append('path').attr('d', line(data));

// var path = svg.append('path')
//     .attr('class', 'line')
//     .attr('d', line(data))
//   .transition()
//     .duration(500)
//     .attrTween('d', pathTween);
var path = svg.append("g")
    .attr("clip-path", "url(#clip)")
  .append("path")
    .datum(dataset)
    .attr("class", "line")
    .attr("d", line);

function pathTween() {
    var interpolate = d3.scale.quantile()
            .domain([0,1])
            .range(d3.range(1, dataset.length + 1));
    return function(t) {
        return line(dataset.slice(0, interpolate(t)));
    };
}

tick();

function tick() {

  // push a new data point onto the back
  if (data.length == dataset.length)
  	return 0;
  for(i=0;i<5;i++) {
  	dataset.push(data[Num]);	
  	Num ++;
  }
  

  // redraw the line, and slide it to the left
  path.attr("d", line)
      .attr("transform", null)
    .transition()
      .duration(99)
      .ease("linear")
      //.attr("transform", "translate( -"+(5.4*dataset.length)+ ",0)")
      .each("end", tick);
  console.log("dataset length = "+dataset.length);

  // pop the old data point off the front
  for(i=0;i<5;i++) {
  	dataset.shift();
	}
}

</script>
<center>
  <stong style="font-size: 30px;">Recommend Music:</strong>
</center>
<center>
  <iframe width="420" height="315"
src="http://www.youtube.com/embed/<%= @song_id %>">
</iframe>
</center>


<%= link_to 'Back', hearts_path %>
